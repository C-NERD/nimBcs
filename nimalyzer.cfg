#verbosity lvlAll

files src/bcs/*.nim

ignore src/bcs/errors.nim

ignore src/bcs/constants.nim

fixcommand nvim +{line} {fileName}

forcefixcommand true

message Checking the program's rules

check params used procedures
explanation Unused parameters only clutter the source code and can cause confusion.

check params used macros
explanation Unused parameters only clutter the source code and can cause confusion.

check hasDoc all
explanation The documentation is a love's letter to your future self. :) Documentation make our lives easier, especially if we have return to the code after a longer period of time.

check localHides
explanation If a local variable has the same name as a global one declared in the same scope, it can lead to hard to read code or even invalid assign to the variable.

check ifStatements all
explanation All the rules enabled make the code more readable. Empty statements are just a dead code. If the statement contains a finishing statment, like return or raise, then it is better to move its following brach outside the statement for better readability. Also using positive conditions in the starting expression helps in preventing in some logical errors.

check not forStatements iterators
explanation There is no need to write information about usage of pairs or items iterators, it can be read directly from the code from the first part of the for statement declaration.

check forStatements empty
explanation Empty statements are just a dead code which made the code harder to read.

check comments legal
explanation Each source code file should have the legal information, required by BSD-3 license.

check assignments shorthand
explanation Shorthand assignments are shorter to write and can be more readable, especially with long names of variables.

check caseStatements min 3
explanation Short case statements can be replaced by if statements for better readablity.

check ifStatements max 3
explanation Long if statements can be replaced by case statements for better readability.

check complexity all 50
explanation A code with high cyclomatic complexity is hard to understand and maintain. Please reduce the amount of the code branches (like, loops, if or case statements).

check not trystatements empty
explanation Except branches with names of exceptions made code more readable. It also prevents problems when the checked code will start propagating new exceptions.

check not vardeclared standardtypes
explanation Using standard types like string or int can lead to hard to find bugs when wrong variables are interacting with self. Also, using a separated types give more information about the variable.

check not ranges spaces
explanation It just enforce Nim coding style. Don't add spaces before and after sign ..
